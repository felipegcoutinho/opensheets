"use server";

import { openai } from "@ai-sdk/openai";
import { generateText } from "ai";
import { z } from "zod";
import { getCards } from "@/app/services/cartoes";
import { getNewCategorias } from "@/app/services/categorias";
import { getTransactionsByResponsableVoce } from "@/app/services/transacoes";
import { createClient } from "@/utils/supabase/server";

const messagesSchema = z
  .array(
    z.object({
      role: z.literal("user"),
      content: z.string().max(10000),
    }),
  )
  .max(6);

const SYSTEM_PROMPT = `
      Voc√™ √© um analista financeiro pessoal especializado em comportamento de consumo.

      Seu papel √© interpretar h√°bitos de consumo com base em transa√ß√µes financeiras. N√£o forne√ßa resumo num√©rico. Em vez disso, foque em:

      1. Detec√ß√£o de comportamentos de consumo recorrentes.
      2. Identifica√ß√£o de gatilhos de compra e padr√µes emocionais.
      3. Recomenda√ß√µes pr√°ticas para melhorar o controle de gastos e estimular h√°bitos financeiros saud√°veis.
      4. Sugest√µes de pequenas mudan√ßas com alto impacto.
      5. Sinais de consumo impulsivo ou desorganizado.
      6. √Åreas com potencial de economia imediata ou reestrutura√ß√£o.

      Responda exclusivamente em JSON com o seguinte formato:

      {
        "comportamentos_observados": [
          "üîç H√°bito ou padr√£o identificado...",
          ...
        ],
        "gatilhos_de_consumo": [
          "‚ö†Ô∏è Gatilho emocional ou padr√£o de comportamento...",
          ...
        ],
        "recomenda√ß√µes_pr√°ticas": [
          "‚úÖ A√ß√£o pr√°tica e direta...",
          ...
        ],
        "melhorias_sugeridas": [
          "üöÄ Mudan√ßa comportamental com impacto positivo...",
          ...
        ]
      }

      Regras:
      - N√£o inclua dados brutos ou valores em reais.
      - Sempre use linguagem clara, direta e interpretativa.
      - Emojis ajudam na leitura, use com modera√ß√£o e coer√™ncia.
      - N√£o repetir dados, gerar an√°lise baseada em comportamento.
      - Traga ao menos 2 observa√ß√µes por se√ß√£o sempre que poss√≠vel.
      - Evite jarg√µes financeiros complexos.
      - Foque em a√ß√µes pr√°ticas e sugest√µes de melhoria.
      - N√£o fa√ßa suposi√ß√µes sobre a situa√ß√£o financeira do usu√°rio.
      - N√£o inclua informa√ß√µes pessoais ou sens√≠veis.
      - Seja cr√≠tico e duro, mas construtivo.
    `;

export async function generateInsights(
  _prevState: unknown,
  formData: FormData,
) {
  const month = formData.get("month")?.toString() ?? "";

  const supabase = createClient();
  const {
    data: { user },
  } = await supabase.auth.getUser();

  if (!user) {
    throw new Error("Unauthorized");
  }

  const [lancamentos, cartoes, categorias] = await Promise.all([
    getTransactionsByResponsableVoce(month),
    getCards(),
    getNewCategorias(),
  ]);

  const messages = [
    { role: "user", content: JSON.stringify(lancamentos) },
    { role: "user", content: JSON.stringify(cartoes) },
    { role: "user", content: JSON.stringify(categorias) },
  ];

  const validated = messagesSchema.safeParse(messages);
  if (!validated.success) {
    throw new Error("Invalid input");
  }

  const result = await generateText({
    model: openai("gpt-4.1-mini"),
    system: SYSTEM_PROMPT,
    messages: validated.data,
  });

  const { text } = result;

  try {
    return JSON.parse(text);
  } catch {
    return null;
  }
}
